{"version":3,"file":"static/js/703.d6b5d29d.chunk.js","mappings":"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","sources":["components/fetchData/fetchData.jsx","components/SearchField/SearchForm/SearchForm.module.css","components/SearchField/SearchForm/SearchForm.jsx","components/SearchField/SearchInput/SearchInput.module.css","components/SearchField/SearchInput/SearchInput.jsx","components/SearchField/SearchBar/SearchBar.module.css","components/SearchField/SearchBar/SearchBar.jsx","webpack://react-homework-template/./src/components/pages/Movies/Movies.module.css?078c","components/pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '105e86e2764e983a83b38e9c7e739751';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\n// import axios from 'axios';\n\n// const API_KEY = '105e86e2764e983a83b38e9c7e739751';\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// const params = {\n//   params: {\n//     api_key: API_KEY,\n//     language: 'en-US',\n//   },\n// };\n\n// export const fetchTrendingMovies = async () => {\n//   const response = await axios.get(`trending/movie/day`, params);\n//   return response.data.results;\n// };\n\n// export const fetchMovieDetails = async movieId => {\n//   const response = await axios.get(`/movie/${movieId}`, params);\n//   return response.data;\n// };\n\n// export const handleSearch = async movieName => {\n//   const response = await axios.get(`/search/movie?query=${movieName}`, params);\n//   return response.data.results;\n// };\n\n// export const fetchMovieCast = async movieId => {\n//   const response = await axios.get(`movie/${movieId}/credits?`, params);\n//   return response.data.cast;\n// };\n\n// export const fetchMovieReviews = async movieId => {\n//   const response = await axios.get(`movie/${movieId}/reviews?`, params);\n//   return response.data.results;\n// };\n","// extracted by mini-css-extract-plugin\nexport default {};","import css from './SearchForm.module.css';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit, children }) => (\n  <form className={css.searchForm} onSubmit={onSubmit}>\n    {children}\n  </form>\n);\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import css from './SearchInput.module.css';\n\nconst SearchInput = () => (\n  <input\n    className={css.searchInput}\n    type=\"text\"\n    name=\"movieName\"\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"May contain only letters, apostrophe, dash and spaces. For example moon\"\n    required\n    autoComplete=\"off\"\n    autoFocus\n    placeholder=\"Search movie...\"\n  />\n);\n\nexport default SearchInput;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { BsSearch } from 'react-icons/bs';\nimport SearchForm from '../SearchForm/SearchForm';\nimport SearchInput from '../SearchInput/SearchInput';\nimport PropTypes from 'prop-types';\nimport css from './SearchBar.module.css';\n\nexport const SearchBar = ({ onSubmit }) => (\n  <div className={css.searchBar}>\n    <SearchForm onSubmit={onSubmit}>\n      <SearchInput />\n      <button type=\"submit\" aria-label=\"search button\">\n        <BsSearch />\n      </button>\n    </SearchForm>\n  </div>\n);\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"temporaryClass\":\"Movies_temporaryClass__ZVnhV\"};","import { Loader } from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { searchMovies } from 'components/fetchData/fetchData';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { SearchBar } from 'components/SearchField/SearchBar/SearchBar';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    setMoviesList([]);\n    setIsLoading(true);\n\n    searchMovies(movieName).then(data => {\n      if (!data.results.length) {\n        setIsLoading(false);\n        setError(true);\n        return console.log(\n          'There is no movies with this request. Please, try again'\n        );\n      }\n      setError(false);\n      setMoviesList(data.results);\n      setIsLoading(false);\n    });\n  }, [movieName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchForm = e.currentTarget;\n    setSearchParams({ movieName: searchForm.elements.movieName.value });\n    searchForm.reset();\n  };\n  return (\n    <main>\n      <SearchBar onSubmit={handleSubmit} />\n      {error && <p>There is no movies with this request. Please, try again</p>}\n      <ul className={css.movieList}>\n        {moviesList.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link\n                className={css.movieLink}\n                to={`/movies/${movie.id}`}\n                state={{ from: location }}\n              >\n                {movie.original_title || movie.name}\n              </Link>\n            </li>\n          );\n        })}\n        {isLoading && <Loader />}\n      </ul>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","getTrending","async","concat","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","_ref","onSubmit","children","_jsx","className","css","SearchInput","type","name","pattern","title","required","autoComplete","autoFocus","placeholder","SearchBar","_jsxs","SearchForm","BsSearch","Movies","_searchParams$get","location","useLocation","searchParams","setSearchParams","useSearchParams","movieName","get","moviesList","setMoviesList","useState","isLoading","setIsLoading","error","setError","useEffect","then","results","length","console","log","e","preventDefault","searchForm","currentTarget","elements","value","reset","map","movie","Link","to","state","from","original_title","Loader"],"sourceRoot":""}